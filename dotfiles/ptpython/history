
# 2018-06-27 09:50:22.455906
+x=3

# 2018-06-27 09:50:37.054665
+x=[3,4,5]

# 2018-06-27 09:50:37.778936
+x

# 2018-06-27 09:54:36.428835
+help

# 2018-06-27 09:56:49.754403
+x=3

# 2018-06-27 09:58:30.280084
+x

# 2018-06-27 10:03:46.520479
+import numpy

# 2018-06-27 10:03:52.643216
+x=3

# 2018-06-27 10:03:55.767235
+import numpy

# 2018-06-27 10:04:02.315175
+import numpy as np

# 2018-06-27 10:04:06.593248
+np.arange(3)

# 2018-06-27 10:04:25.618521
+x=np.arange(3)

# 2018-06-27 10:04:27.810690
+x[1]

# 2018-06-27 10:04:49.314311
+x=np.arange(3)

# 2018-06-27 10:05:19.953330
+x=np.arange(3)
+y=7

# 2018-06-27 10:05:27.893394
+import biggles

# 2018-06-27 10:05:34.200823
+biggles.plot([3,4],[5,6])

# 2018-06-27 10:06:25.344815
+x[1]

# 2018-06-27 10:06:46.401432
+x=3

# 2018-06-27 10:06:51.976644
+x=np.arange(3)

# 2018-06-27 10:06:56.624308
+import numpy as np

# 2018-06-27 10:06:58.072267
+x=np.arange(3)

# 2018-06-27 10:07:28.960056
+y=[3, "stuff", 8]

# 2018-06-27 10:07:39.983799
+%time x=3

# 2018-06-27 10:08:14.911323
+"hello".center

# 2018-06-27 10:08:16.863354
+"hello".center()

# 2018-06-27 10:08:20.239653
+"   hello".center()

# 2018-06-27 10:10:52.981817
+x=3

# 2018-06-27 10:11:28.532653
+"   hello".center(20," ")

# 2018-06-27 10:12:30.744642
+import images

# 2018-06-27 10:12:34.971369
+reload(images)

# 2018-06-27 10:15:27.097633
+np

# 2018-06-27 10:20:39.384819
+x=35

# 2018-06-27 10:20:49.759976
+y=7

# 2018-06-27 10:23:46.874364
+x=3

# 2018-06-27 10:23:51.449780
+y=7

# 2018-06-27 10:23:59.572618
+y=77

# 2018-06-27 10:24:46.057797
+x=7

# 2018-06-27 10:24:50.007628
+y=3

# 2018-06-27 13:01:32.428058
+np

# 2018-06-27 14:25:55.725804
+fitsio

# 2018-06-27 14:28:42.163746
+ngmix

# 2018-07-24 21:35:37.944455
+import minimof

# 2018-07-24 21:37:22.956225
+ngmix

# 2018-07-24 21:37:50.336691
+import minimof

# 2018-07-24 21:37:56.723417
+reload(minimof.test)

# 2018-07-24 21:38:03.424405
+reload(minimof.stamps.test)

# 2018-07-24 21:38:34.561028
+import minimof

# 2018-07-24 21:39:47.334480
+reload(minimof.stamps.test)

# 2018-07-24 21:40:16.825546
+reload(minimof.stamps)

# 2018-07-24 21:40:25.863031
+minimof.stamps.test()

# 2018-07-24 21:46:04.177537
+import minimof

# 2018-07-24 21:46:06.098212
+reload(minimof.stamps)

# 2018-07-24 21:46:08.207573
+minimof.stamps.test()

# 2018-07-24 21:46:42.078242
+reload(images)

# 2018-07-24 21:46:44.780790
+import images

# 2018-07-24 21:46:45.827948
+images

# 2018-07-24 21:46:48.834546
+reload(images)

# 2018-07-24 21:46:52.127354
+minimof.stamps.test()

# 2018-07-24 21:48:02.300783
+import minimof

# 2018-07-24 21:48:07.204399
+minimof.stamps.test(dim=800)

# 2018-07-24 22:14:26.384839
+reload(minimof.stamps)

# 2018-07-24 22:14:28.404678
+minimof.stamps.test(dim=800)

# 2018-07-24 22:14:51.193897
+reload(minimof.stamps)

# 2018-07-24 22:14:51.928059
+minimof.stamps.test(dim=800)

# 2018-07-24 22:15:11.313747
+reload(minimof.stamps)

# 2018-07-24 22:15:12.056697
+minimof.stamps.test(dim=800)

# 2018-07-24 22:16:36.622218
+reload(minimof.stamps)

# 2018-07-24 22:16:37.355068
+minimof.stamps.test(dim=800)

# 2018-07-24 22:17:54.022406
+reload(minimof.stamps)

# 2018-07-24 22:17:54.818897
+minimof.stamps.test(dim=800)

# 2018-07-24 22:18:55.179226
+import minimof

# 2018-07-24 22:18:58.631031
+minimof.stamps.test(dim=800)

# 2018-07-25 08:51:33.797929
+import minimof

# 2018-07-25 08:51:36.673564
+minimof.stamps.test(dim=800)

# 2018-07-25 08:53:31.924106
+for i in range(100):minimof.stamps.test(dim=800)

# 2018-07-25 08:54:17.597192
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:02:01.082950
+reload(minimof.stamps)

# 2018-07-25 09:02:04.074738
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:03:06.437884
+import galsim

# 2018-07-25 09:03:07.619838
+galsim

# 2018-07-25 09:03:56.675752
+import minimof

# 2018-07-25 09:04:00.872841
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:04:43.036373
+import minimof

# 2018-07-25 09:04:44.606768
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:05:59.634892
+reload(minimof.stamps)

# 2018-07-25 09:06:00.840213
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:06:35.980869
+reload(minimof.stamps)

# 2018-07-25 09:06:37.304930
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:07:07.960669
+reload(minimof.stamps)

# 2018-07-25 09:07:08.949098
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:08:21.757575
+reload(minimof.stamps)

# 2018-07-25 09:08:22.714731
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:09:10.874307
+reload(minimof.stamps)

# 2018-07-25 09:09:12.049981
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:11:01.523588
+reload(minimof.stamps)

# 2018-07-25 09:11:02.639353
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:11:14.412161
+q

# 2018-07-25 09:12:01.736163
+reload(minimof.stamps)

# 2018-07-25 09:12:03.347380
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 09:13:53.703737
+reload(minimof.stamps)

# 2018-07-25 09:13:54.933448
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 19:22:20.573026
+import minimof

# 2018-07-25 19:22:22.572932
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 19:47:01.726018
+reload(minimof.stamps)

# 2018-07-25 19:47:02.839038
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 20:52:40.365652
+reload(minimof.stamps)

# 2018-07-25 20:52:41.877322
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 20:54:40.654482
+reload(minimof.stamps)

# 2018-07-25 20:54:41.605671
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 20:55:00.537471
+reload(minimof.stamps)

# 2018-07-25 20:55:01.682318
+for i in range(100):
+    minimof.stamps.test(dim=800)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 20:55:13.263575
+for i in range(100):
+    minimof.stamps.test(dim=600)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 20:55:26.178015
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:24:15.390471
+reload(minimof.stamps)

# 2018-07-25 22:24:16.341199
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:24:45.514878
+reload(minimof.stamps)

# 2018-07-25 22:24:46.387916
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:25:49.376817
+reload(minimof.stamps)

# 2018-07-25 22:25:50.657755
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:28:17.401624
+reload(minimof.stamps)

# 2018-07-25 22:28:18.494599
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:29:25.624902
+reload(minimof.stamps)

# 2018-07-25 22:29:26.687588
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:31:27.771187
+reload(minimof.stamps)

# 2018-07-25 22:31:28.906370
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:32:48.886935
+reload(minimof.stamps)

# 2018-07-25 22:32:49.990511
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:33:49.621500
+reload(minimof.stamps)

# 2018-07-25 22:33:50.787482
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-25 22:39:50.042344
+reload(minimof.stamps)

# 2018-07-25 22:39:51.271078
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-26 21:41:42.666405
+import minimo

# 2018-07-26 21:41:45.757075
+import minimof

# 2018-07-28 22:25:21.826973
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-28 22:26:05.074782
+import minimof

# 2018-07-28 22:26:06.697171
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-28 22:27:37.273291
+import minimof

# 2018-07-28 22:29:53.252764
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-07-28 22:41:29.023496
+import minimof

# 2018-07-28 22:41:46.297673
+for i in range(100):
+    minimof.stamps.test(dim=700)
+    if 'q'==input('hit a key (q to quit): '):
+        break

# 2018-08-03 21:08:05.387354
+211/4.0

# 2018-08-04 09:40:21.791510
+read

# 2018-08-06 20:18:02.566369
+(0.02-1.62641943e-04)

# 2018-08-06 20:18:05.657058
+(0.02-1.62641943e-04)/0.02-1

# 2018-08-07 21:44:25.910188
+1.18820736e-02*sqrt(4)

# 2018-08-10 20:26:30.253591
+t=fitsio.read(glob('test-fix*.fits'))

# 2018-08-10 20:26:36.773638
+t=eu.io.read(glob('test-fix*.fits'))

# 2018-08-11 09:19:06.283005
+39/124

# 2018-08-11 09:19:13.108590
+39/124 * 31

# 2018-08-11 15:18:13.534176
+import dbsim

# 2018-08-11 15:18:31.971593
+dbsim.pdfs

# 2018-08-11 15:18:48.226074
+help(dbsim.pdfs.CosmosSampler)

# 2018-08-11 15:18:56.179616
+import dbsim

# 2018-08-11 15:19:01.292345
+dbsim.pdfs.CosmosSampler?

# 2018-08-11 15:19:06.398291
+dbsim.pdfs.CosmosSampler()

# 2018-08-11 15:19:14.632661
+cs=dbsim.pdfs.CosmosSampler()

# 2018-08-11 15:19:20.129221
+r=cs.sample(100000)

# 2018-08-11 15:19:25.650350
+r=cs.sample?

# 2018-08-11 15:19:39.252114
+plot_hist(r[:,0], nbin=100)

# 2018-08-11 15:19:50.849545
+plot_hist(r[:,1], nbin=100)

# 2018-08-11 15:20:15.194279
+cs=dbsim.pdfs.CosmosSampler?

# 2018-08-11 15:20:22.431364
+cs=dbsim.pdfs.CosmosSampler(flux_mult=250)

# 2018-08-11 15:20:27.559958
+r=cs.sample?

# 2018-08-11 15:20:33.772379
+r=cs.sample(size=100000)

# 2018-08-11 15:20:36.625457
+plot_hist(r[:,1], nbin=100)

# 2018-08-11 15:21:04.822513
+ls

# 2018-08-11 15:21:09.181228
+t=eu.io.read(glob('test-fix*.fits'))

# 2018-08-11 15:21:24.565777
+plot_hist(t['bdf_flux'][:,1],nbin=100)

# 2018-08-11 15:21:36.870063
+print_stats(t['bdf_flux'][:,1])

# 2018-08-11 15:21:44.872025
+plot_hist(t['bdf_flux'][:,1],nbin=100)

# 2018-08-11 15:21:52.948584
+plot_hist(t['bdf_flux'][:,1],nbin=100,min=0,max=1000)

# 2018-08-11 15:21:59.455001
+plot_hist(t['bdf_flux'][:,1]/0.263**2,nbin=100,min=0,max=1000)

# 2018-08-11 15:22:03.382949
+plot_hist(t['bdf_flux'][:,1]/0.263**2,nbin=100,min=0,max=10000)

# 2018-08-11 15:22:14.865165
+plot_hist(r[:,1], nbin=100)

# 2018-08-11 15:22:24.852422
+plot_hist(r[:,1], nbin=100,min=0,max=10000)

# 2018-08-11 15:22:59.610117
+plt=plot_hist(r[:,1], nbin=100,min=0,max=10000,key=biggles.PlotKey(0.9,0.9,halign='right'), label='cosmos')

# 2018-08-11 15:23:06.050373
+plt=plot_hist(r[:,1], nbin=100,min=0,max=10000,key=biggles.PlotKey(0.9,0.9,halign='right'), label='cosmos',norm=1)

# 2018-08-11 15:23:26.035019
+plot_hist(t['bdf_flux'][:,1]/0.263**2,nbin=100,min=0,max=10000,color='green',norm=1,label='fit',plt=plt)

# 2018-08-11 15:24:47.299942
+plt.show()
